name: Frontend Application CI/CD

on:
  push:
    branches: [main, develop, staging, preprod]
    tags: ['v*']
  pull_request:
    branches: [main, develop]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment'
        required: true
        default: 'development'
        type: choice
        options:
        - development
        - staging
        - pre-production
        - production
      enable_sonar:
        description: 'Enable SonarCloud analysis'
        type: boolean
        default: true
      enable_checkmarx:
        description: 'Enable Checkmarx security scanning'
        type: boolean
        default: true
      force_version:
        description: 'Override version (production only)'
        required: false
        type: string

jobs:
  call-shared-workflow:
    uses: YOUR_ORG/shared-ci-cd-workflows/.github/workflows/shared-ci-cd.yml@main
    with:
      # Environment configuration
      environment: ${{ github.event.inputs.environment || 'development' }}
      
      # Build configuration (customize for your frontend app)
      node-version: '18'
      app-location: '/'
      output-location: 'build'          # or 'dist' for Vite/Vue apps
      build-command: 'npm run build'    # customize as needed
      install-command: 'npm ci'         # or 'npm install' if needed
      
      # Security scanning controls (optional overrides - centralized in shared repo)
      enable-sonar: ${{ github.event.inputs.enable_sonar }}
      enable-checkmarx: ${{ github.event.inputs.enable_checkmarx }}
      
      # Quality gate thresholds (optional overrides - centralized in shared repo)
      min-code-coverage: '75'           # override shared repo default if needed
      max-critical-vulnerabilities: '0' # override shared repo default if needed
      max-high-vulnerabilities: '5'     # override shared repo default if needed
      
      # Deployment controls
      skip-deployment: false
      force-version: ${{ github.event.inputs.force_version }}
    
    secrets:
      # Azure Static Web Apps API tokens (set these in your frontend repo)
      AZURE_STATIC_WEB_APPS_API_TOKEN_DEV: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_DEV }}
      AZURE_STATIC_WEB_APPS_API_TOKEN_STAGING: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_STAGING }}
      AZURE_STATIC_WEB_APPS_API_TOKEN_PREPROD: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_PREPROD }}
      AZURE_STATIC_WEB_APPS_API_TOKEN_PROD: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_PROD }}
      
      # Security scanning secrets (set these in your frontend repo)
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      CHECKMARX_CLIENT_ID: ${{ secrets.CHECKMARX_CLIENT_ID }}
      CHECKMARX_SECRET: ${{ secrets.CHECKMARX_SECRET }}
      CHECKMARX_TENANT: ${{ secrets.CHECKMARX_TENANT }}
      CHECKMARX_BASE_URI: ${{ secrets.CHECKMARX_BASE_URI }}